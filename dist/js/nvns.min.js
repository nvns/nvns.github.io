function HomeCtrl(e,o,n){function t(){r.video.player?(e.$on("youtube.player.playing",function(e,o){r.video_ready=!0}),o(function(){r.video_check_interval||(r.video_check_interval=n(i,1e4))},1e4)):o(t,10)}function i(){if(r.video.player){var e=r.video.player.getPlayerState();isNaN(e)||[-1,0,2,5].indexOf(e)&&(r.video.player.mute(),r.video.player.playVideo())}}var r=e.vars={scrolled:!1,video_ready:!1,video:{id:"X2C8gbqzv2Q",player:null,params:{autoplay:1,loop:1,controls:0,showinfo:0,playlist:"X2C8gbqzv2Q",modestbranding:1,autohide:1,mute:1,origin:window.location.href},muted:!0},video_check_interval:null};e.init=function(){$(window).scroll(function(){var n=$(window).scrollTop();o(function(){e.$apply(function(){r.scrolled=n>0})})}),t()},e.toggleVideoSound=function(){r.video.muted?(r.video.player.unMute(),r.video.muted=!1):(r.video.player.mute(),r.video.muted=!0)},window.scope=e}var nvns={};nvns.nvnsApp=angular.module("nvnsApp",["youtube-embed"]),nvns.nvnsApp.controller("DefaultPageCtrl",["$scope","$timeout",function(e,o){e.vars={scrolled:!1,viewport_width:0},e.init=function(){e.setViewportWidth(),$(window).resize(function(){e.setViewportWidth()}),$(window).scroll(function(){e.setScrolledState()}),function(e,o,n){var t,i=e.getElementsByTagName(o)[0];e.getElementById(n)||(t=e.createElement(o),t.id=n,t.src="//connect.facebook.net/en_GB/sdk.js#xfbml=1&version=v2.5",i.parentNode.insertBefore(t,i))}(document,"script","facebook-jssdk")},e.setScrolledState=function(){var n=$(window).scrollTop(),t=e.vars.viewport_width>=1199?100:0;o(function(){e.$apply(function(){e.vars.scrolled=n>t})})},e.setViewportWidth=function(){var n=Math.max(document.documentElement.clientWidth,window.innerWidth||0);0!==n?e.vars.viewport_width=n:o(scope.getViewportWidth,100)},window.scope=e}]),nvns.nvnsApp.controller("HomeCtrl",HomeCtrl),HomeCtrl.$inject=["$scope","$timeout","$interval"];
//# sourceMappingURL=data:application/json;charset=utf8;base64,
