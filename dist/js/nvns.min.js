var nvns={};nvns.nvnsApp=angular.module("nvnsApp",[]),nvns.nvnsApp.controller("DefaultPageCtrl",["$scope","$timeout",function(e,o){e.vars={scrolled:!1,viewport_width:0},e.init=function(){e.setViewportWidth(),$(window).resize(function(){e.setViewportWidth()}),$(window).scroll(function(){e.setScrolledState()}),function(e,o,n){var t,i=e.getElementsByTagName(o)[0];e.getElementById(n)||(t=e.createElement(o),t.id=n,t.src="//connect.facebook.net/en_GB/sdk.js#xfbml=1&version=v2.5",i.parentNode.insertBefore(t,i))}(document,"script","facebook-jssdk")},e.setScrolledState=function(){var n=$(window).scrollTop(),t=e.vars.viewport_width>=1199?100:0;o(function(){e.$apply(function(){e.vars.scrolled=n>t})})},e.setViewportWidth=function(){var n=Math.max(document.documentElement.clientWidth,window.innerWidth||0);0!==n?e.vars.viewport_width=n:o(scope.getViewportWidth,100)},window.scope=e}]),nvns.nvnsApp.controller("HomeCtrl",["$scope","$timeout","$http",function(e,o,n){e.vars={scrolled:!1,video_ready:!1,video:null,video_options:{id:"199110986",loop:!0,title:!1,portrait:!1,muted:!0,autoplay:!0}},e.init=function(){$(window).scroll(function(){var n=$(window).scrollTop();o(function(){e.$apply(function(){e.vars.scrolled=n>0})})}),e.initVideoPlayer()},e.initVideoPlayer=function(){e.vars.video=new Vimeo.Player("video-container",e.vars.video_options),e.vars.video.on("loaded",function(o){e.vars.video.play()}),e.vars.video.ready().then(function(){e.vars.video.getPaused().then(function(o){o&&e.vars.video.play()})}),e.vars.video_ready=!0},e.toggleVideoSound=function(){e.vars.video.muted?(e.vars.video.player.unMute(),e.vars.video.muted=!1):(e.vars.video.player.mute(),e.vars.video.muted=!0)},window.scope=e}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
