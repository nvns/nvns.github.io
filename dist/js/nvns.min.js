function HomeCtrl(t,e,i,n){function o(){i.onYouTubeIframeAPIReady=l;var t=document.createElement("script");t.src="https://www.youtube.com/iframe_api";var e=document.getElementsByTagName("script")[0];e.parentNode.insertBefore(t,e)}function l(){A.video_player=new YT.Player("home-hero-video",A.video_object)}function a(t){A.video_player.mute()}function r(t){var e=parseInt(t.data);isNaN(e)||([-1,0,2,5].indexOf(e)>-1?T():O())}function T(){var t=A.video_player.getPlayerState();1!==t?(A.video_player.playVideo(),$("#home-hero-video").click(),e(T,100)):O()}function O(){t.$apply(function(){A.video_ready=!0})}var E=t.constants={selected_bg_video_index:Math.round(Math.random()),bg_videos:[{author:"Richard Levien",youtube_id:"X2C8gbqzv2Q",external_url:"https://vimeo.com/199110986",has_audio:!0},{author:"Ian Momsen",youtube_id:"MDaoEwK5P7k",external_url:null,has_audio:!1}]},A=t.vars={scrolled:!1,video_ready:!1,video_player:null,video_muted:!0,video_object:{videoId:E.bg_videos[E.selected_bg_video_index].youtube_id,playerVars:{autoplay:1,loop:1,playlist:E.bg_videos[E.selected_bg_video_index].youtube_id,controls:0,showinfo:0,modestbranding:1,autohide:1,origin:window.location.href},events:{onReady:a,onStateChange:r}},video_check_interval:null};t.init=function(){$(window).scroll(function(){var i=$(window).scrollTop();e(function(){t.$apply(function(){A.scrolled=i>0})})}),o()},t.videoService=function(t){return t?t.indexOf("vimeo.com")>-1?"vimeo":t.indexOf("youtube.com")>-1?"youtube":"unknown":"unknown"},t.toggleVideoSound=function(){A.video_muted?(A.video_player.unMute(),A.video_muted=!1):(A.video_player.mute(),A.video_muted=!0)},t.trustUrl=function(t){return n.trustAsUrl(t)},window.scope=t}var nvns={};nvns.nvnsApp=angular.module("nvnsApp",[]),nvns.nvnsApp.controller("DefaultPageCtrl",["$scope","$timeout",function(t,e){t.vars={scrolled:!1,viewport_width:0},t.init=function(){t.setViewportWidth(),$(window).resize(function(){t.setViewportWidth()}),$(window).scroll(function(){t.setScrolledState()}),function(t,e,i){var n,o=t.getElementsByTagName(e)[0];t.getElementById(i)||(n=t.createElement(e),n.id=i,n.src="//connect.facebook.net/en_GB/sdk.js#xfbml=1&version=v2.5",o.parentNode.insertBefore(n,o))}(document,"script","facebook-jssdk")},t.setScrolledState=function(){var i=$(window).scrollTop(),n=t.vars.viewport_width>=1199?100:0;e(function(){t.$apply(function(){t.vars.scrolled=i>n})})},t.setViewportWidth=function(){var i=Math.max(document.documentElement.clientWidth,window.innerWidth||0);0!==i?t.vars.viewport_width=i:e(scope.getViewportWidth,100)},window.scope=t}]),nvns.nvnsApp.controller("HomeCtrl",HomeCtrl),HomeCtrl.$inject=["$scope","$timeout","$window","$sce"],function(){"use strict";function t(){return{restrict:"E",templateUrl:"/dist/html/auction_inventory/auction_inventory_table.html",scope:{},controller:e}}function e(t){t.vars={inventory:[{title:"Live Auction",type:"auction",items:[{title:"TWO-NIGHT STAY IN SANTA CRUZ BEACH HOUSE",value:1200,starting_bid:700},{title:"TWO-NIGHT STAY IN GUERNEVILLE FAMILY COMPOUND - UP TO TEN PEOPLE",value:1e3,starting_bid:700},{title:"MARINE MAMMAL CENTER BEHIND THE SCENES TOUR",value:1e3,starting_bid:450},{title:"THREE-NIGHT STAY ANTIQUE CAPE COD LAKE HOUSE - UP TO SIX ADULTS",value:975,starting_bid:600},{title:"TWO-NIGHT STAY FOR TWO AT LODGE AT EDGEWOOD TAHOE",value:900,starting_bid:600},{title:"4 TICKETS TO SF GIANTS",value:700,starting_bid:450},{title:"CUSTOM OIL PORTRAIT OF YOUR CHILD BY KEES DEN BREEJEN",value:500,starting_bid:300},{title:"CRAWFISH BOIL OR JAMBALAYA FOR 10-20 PEOPLE",value:450,starting_bid:300},{title:"HAREL'S BREADMAKING CLASS FOR 5 PEOPLE",value:250,starting_bid:150},{title:"STUBBS FAMILY VINEYARD WINE TOUR AND TASTING",value:280,starting_bid:150},{title:"SF JAZZ CENTER VOUCHER FOR TWO PERFORMANCE TICKETS",value:130,starting_bid:85},{title:"GOLDEN GATE BRIDGE SAILBOAT/MIMOSA TOUR FOR TWO",value:130,starting_bid:70},{title:"LIBERATED LIGHT HERBALS TEA/SALVE BASKET",value:null,starting_bid:null}]},{title:"Silent Auction",type:"auction",items:[{title:"TWO-NIGHT STAY FOR TWO AT OMNI ROYAL ORLEANS",value:850,starting_bid:650},{title:"ONE-HOUR PHOTOGRAPHY SESSION WITH FAMILY PHOTOGRAPHER LILA SMYTH",value:550,starting_bid:350},{title:"ORGANIC VALLEY YEARS SUPPLY OF ORGANIC DAIRY PRODUCTS",value:520,starting_bid:275},{title:"ART + WINE PAINT NIGHT - PRIVATE PAINTING LESSON FOR UP TO FIVE PEOPLE FROM JEN BLOOMER",value:450,starting_bid:200},{title:"BRISKET DINNER FOR UP TO 15 PEOPLE",value:450,starting_bid:350},{title:"LUNCH FOR TWO WITH CA STATE SENATOR SCOTT WIENER",value:350,starting_bid:175},{title:"ONE-NIGHT STAY FOR TWO AT BOON HOTEL & SPA",value:318,starting_bid:150},{title:"ONE-NIGHT STAY AND ROUND OF GOLF FOR TWO AT HISTORIC BENBOW HOTEL AND RESORT",value:315,starting_bid:250},{title:"TWO-NIGHT STAY IN LOVELY IN-LAW RENTAL IN  SF'S GLEN PARK",value:300,starting_bid:150},{title:"BETABRAND SHOPPING EXPERIENCE",value:300,starting_bid:100},{title:"ONE-NIGHT STAY FOR TWO AT SORENSON'S RESORT IN HOPE VALLEY",value:275,starting_bid:150},{title:"CUSTOM OUTDOOR WOODEN PLAY KITCHEN",value:250,starting_bid:100},{title:"ORIGINAL CUSTOM ILLUSTRATION SHIRI ASHKENAZI",value:250,starting_bid:180},{title:"BARBARY COAST TOURS HISTORIC WALKING TOUR",value:200,starting_bid:75},{title:"SF ZOO TRIP WITH TEACHER EVA AND TEACHER JOHANA",value:200,starting_bid:160},{title:"SOULCYCLE - 3 CLASS PASS",value:96,starting_bid:55},{title:"BAY SAIL FOR 2 - ADVENTURE CAT SAILING CHARTERS",value:90,starting_bid:50},{title:"PRESIDIO BOWL - ONE HOUR OF UNLIMITED BOWLING ON ONE LANE",value:89,starting_bid:45},{title:"TERRA MIA POTTERY PAINTING VIP STUDIO PASS",value:60,starting_bid:45}]},{title:"Raffles",type:"raffle",items:[{title:"INSTANT WINE CELLAR RAFFLE - WIN UP TO 15 BOTTLES OF WINE (EACH BOTTLE WORTH AT LEAST $35)",price:30},{title:"TWO-NIGHT STAY AT SF'S HOTEL KABUKI - VALUED AT $550",price:50}]},{title:"Restaurant Row",type:"restaurant_row",items:[{title:"GIFT CERTIFCATES TO SOME OF SF'S MOST POPULAR RESTAURANTS"}]}]}}nvns.nvnsApp.directive("nvnsAuctionInventory",t),t.$inject=[],e.$inject=["$scope"]}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
